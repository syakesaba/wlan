/*
Graphviz - DOT language writing!
$dot -Tsvg this.dot -o this.svg
*/
digraph Diagram {
    //PROFILE [label = "written by SYA-KE", shape=none];
    nodesep=0.1;
    node [fontsize=10];
    edge [fontsize=9];
    /*
    {
        node [style="invis"];
        MAIN1 -> OPN2 -> WEP3 -> WPA4 [allowhead="none",style="invis"];
    }
    */
    subgraph clusterMain {
        label = "Connecting Wireless-LAN Access Point";
        subgraph clusterFail {
            node [shape=doublecircle];
            Impossible [label="BluteForceAttack? :D"];
        }
        subgraph clusterOPN{
            label = "OPN";
            subgraph OPN_N_If {
                node [shape=diamond];
                NothingToDo [URL="http://compnetworking.about.com/od/wirelessfaqs/f/legal_free_wifi.htm"];
            }
            subgraph OPN_Flow {
            }
        }
        subgraph clusterWEP {
            label = "WEP";
            subgraph WEP_N_Do {
                node [shape=box];
                ARPReplay [label="Perform ARP replay Attack",URL="http://www.aircrack-ng.org/doku.php?id=arp-request_reinjection"];
                CaptureSomeDataPacket [label="Capture #Data Packet",URL="http://www.aircrack-ng.org/doku.php?id=how_to_crack_wep_with_no_clients"];
                ForgeARP [label="Forge ARP Packet",URL="http://www.aircrack-ng.org/doku.php?id=packetforge-ng"];
                BluteforceCRC [label="BluteForce Against a WEP Data Packet"];
                CrackCredential_WEP [label="CrackCredential"];
            }
            subgraph WEP_N_If {
                node [shape=diamond];
                HasClient_WEP [label="HasClient"];
                CouldGenerateXOR;
            }
            subgraph WEP_Flow {
                HasClient_WEP -> ARPReplay [label="Yes."];
                HasClient_WEP -> CaptureSomeDataPacket [label="No."];
                CaptureSomeDataPacket -> CouldGenerateXOR;
                CouldGenerateXOR -> ForgeARP [label="Yes."];
                CouldGenerateXOR -> BluteforceCRC [label="No."];
                BluteforceCRC -> CrackCredential_WEP;
                ForgeARP -> ARPReplay;
                ARPReplay -> CrackCredential_WEP;
            }
        }
        subgraph clusterWPA {
            label = "WPA";
            subgraph WPA_N_If {
                node [shape=diamond];
                IsTKIP;
                IsPSK;
                HasWPS_PSK [label="HasWPS",URL="http://code.google.com/p/reaver-wps/source/browse/trunk/docs/README.WASH?r=87"];
                HasClient_EAP [label="HasClient"];
            }
            subgraph WPA_Flow {
                IsTKIP -> HasWPS_PSK [label="Yes."];
                IsTKIP -> IsPSK [label="No."];
                //IsTKIP -> KobeCrack [label="gain xor -> sniff and forge packets(do XOR each transaction)"]
                IsPSK -> HasWPS_PSK [label="Yes."];
                IsPSK -> HasClient_EAP [label="NO."];
            }
            subgraph clusterPSK {
                label = "PSK";
                subgraph PSK_N_If {
                    node [shape=diamond];
                    HasClient_PSK [label="HasClient"];
                    IsWeakWPS [URL="https://scotthelme.co.uk/wifi-insecurity-wps/"];
                }
                subgraph PSK_N_Do {
                    node [shape=box];
                    SetupRougeAccessPointOrDeauthClient [shape=record,label="SetupRougeAP|DeauthClient"];
                    StealHandShake;
                    CrackCredential_PSK [label="CrackCredential"];
                    CrackWPS [URL="http://lifehacker.com/5873407/how-to-crack-a-wi-fi-networks-wpa-password-with-reaver"];
                }
                subgraph PSK_Flow {
                    HasWPS_PSK -> IsWeakWPS [label="Yes."];
                    IsWeakWPS -> CrackWPS [label="Yes."]
                    IsWeakWPS -> HasClient_PSK [label="No."]
                    HasWPS_PSK -> HasClient_PSK [label="No."];
                    HasClient_PSK -> SetupRougeAccessPointOrDeauthClient [label="Yes."];
                    HasClient_PSK -> Impossible [label="No."];
                    SetupRougeAccessPointOrDeauthClient -> StealHandShake;
                    StealHandShake -> CrackCredential_PSK;
                    CrackWPS -> CrackCredential_PSK;
                }
            }
            subgraph clusterEAP {
                label = "EAP";
                subgraph EAP_N_If {
                    node [shape=diamond];
                }
                subgraph EAP_N_Do {
                    node [shape=box];
                    SetupRougeAP;
                    CaptureChallangeResponse;
                    CrackCredential_EAP [label="CrackCredential"];
                }
                subgraph EAP_Flow {
                    HasClient_EAP -> SetupRougeAP [label="Yes."];
                    HasClient_EAP -> Impossible [label="No."]
                    SetupRougeAP -> CaptureChallangeResponse;
                    CaptureChallangeResponse -> CrackCredential_EAP;
                }
            }
        }
        subgraph N_Start {
            node [shape=invtriangle];
            Start;
        }
        subgraph N_End {
            node [shape=triangle];
            End;
            subgraph Impossible_to_End{
                Impossible -> End;
            }
        }
        subgraph Nodes {
            subgraph N_Do {
                node [shape=box];
                ImproveYourWifiAntenna [URL="http://www.instructables.com/id/DIY-WIFI-Antenna-Reception-Booster/"];
                DeauthAllClient [URL="http://www.aircrack-ng.org/doku.php?id=deauthentication"];
                SpoofHardwareAddress [URL="http://www.securethelock.com/2013/12/03/how-to-bypass-mac-address-filtering-using-backtrackkali-linux/"]
                SpoofHardwareAddress2 [label="SpoofHardwareAddressToClient'sOne",URL="http://www.securethelock.com/2013/12/03/how-to-bypass-mac-address-filtering-using-backtrackkali-linux/"]
            }
            subgraph N_If {
                node [shape=diamond];
                HasAccessPointsAroundYou [URL="http://www.aircrack-ng.org/doku.php?id=airodump-ng"];
                IsStealthESSID [URL="http://securitysynapse.blogspot.jp/2014/01/wireless-pentesting-on-cheap-kali-hiddenSSID.html"];
                IsThereConnectedClient [URL="http://blackhat6969.blogspot.jp/2012/09/down-and-dirty-wifi-cracking-with.html"];
                HasHardwareAddressFiltering [URL="http://synjunkie.blogspot.jp/2007/12/bypass-hidden-ssid-mac-address-filter.html"];
                HasEncryption [URL="http://www.dummies.com/how-to/content/wireless-security-protocols-wep-wpa-and-wpa2.html"];
                IsWEP [URL="http://www.howtogeek.com/167783/htg-explains-the-difference-between-wep-wpa-and-wpa2-wireless-encryption-and-why-it-matters/"];
                HasWebAuthentication [URL="http://www.slideshare.net/support_cyberoam/hotspot-authentication"];
                HasAccount;
                HasClient_Web [label="HasAlreadyAuthenticatedClient"];
            }
        }
        subgraph Flow {
            Start -> HasAccessPointsAroundYou [label="Fine."];
            HasAccessPointsAroundYou -> IsStealthESSID [label="Yes"]
            HasAccessPointsAroundYou -> ImproveYourWifiAntenna [label="No."];
            ImproveYourWifiAntenna -> IsStealthESSID [label="OK I got it."];
            IsStealthESSID -> IsThereConnectedClient [label="Yes."];
            IsThereConnectedClient -> DeauthAllClient [label="Yes."];
            IsThereConnectedClient -> IsThereConnectedClient [label="No."];
            IsStealthESSID -> HasHardwareAddressFiltering [label="No."];
            DeauthAllClient -> HasHardwareAddressFiltering [label="I got ESSID."]
            HasHardwareAddressFiltering -> SpoofHardwareAddress [label="Yes."]
            HasHardwareAddressFiltering -> HasEncryption [label="No."];
            SpoofHardwareAddress -> HasEncryption [label="I could associate with AP(or WEP-SKA."]
            HasEncryption -> NothingToDo [label="No."]
            //goto clusterOPN

            HasEncryption -> IsWEP [label="Yes."];
            IsWEP -> HasClient_WEP [label="Yes."];
            //goto clusterWEP

            IsWEP -> IsTKIP [label="No."];
            //goto clusterWPA

            //back from OPN
            NothingToDo -> HasWebAuthentication;
            //back from WPA
            CrackCredential_PSK -> HasWebAuthentication;
            CrackCredential_EAP -> HasWebAuthentication;
            //back from WEP
            CrackCredential_WEP -> HasWebAuthentication;

            HasWebAuthentication -> HasAccount [label="Yes."];
            HasWebAuthentication -> HasClient_Web [label="No."]
            HasClient_Web -> SpoofHardwareAddress2 [label="Yes."];
            HasClient_Web -> Impossible [label="No."];

            HasAccount -> End;
            SpoofHardwareAddress2 -> End;
        }
    }
    //subgraph clusterCommands {
    subgraph Commands {
        label = "CommandsAndNotes";
        subgraph Nt_Command {
            node [shape=box];
            HasAccessPointsAroundYouCommand [label="ifconfig wlan0 down;\niwconfig wlan0 mode mon || airmon-ng start wlan0;\nairodump-ng wlan0;\n"];
            ImproveYourWifiAntennaCommand [label="iw reg set BO;\niwconfig wlan0 tx 30;\n#Add DIY Parabora."];
            IsStealthESSIDCommand [label="airodump-ng -c [channel] --bssid [AP MAC] wlan0"]
            DeauthAllClientCommand [label="aireplay-ng -0 0 -a [AP MAC] wlan0;\naireplay-ng -0 0 -a [AP MAC] -c [STA MAC] wlan0;"];
            SpoofHardwareAddressCommand [label="ifconfig wlan0 down && ifconfig hw ether [MAC] && ifconfig wlan0 up;\nmacchanger -m [MAC] wlan0;"]
        }
        subgraph Nt_Flow {
            edge [color=gray];
            HasAccessPointsAroundYouCommand -> HasAccessPointsAroundYou;
            ImproveYourWifiAntennaCommand -> ImproveYourWifiAntenna;
            IsStealthESSIDCommand -> IsStealthESSID;
            DeauthAllClientCommand -> DeauthAllClient;
            SpoofHardwareAddressCommand -> SpoofHardwareAddress;
        }
    }
/*
    {
        edge[style=invis];
        {End} -> {Impossible};
    }
*/
    /*
    {rank=same; MAIN1; Start ;};
    {rank=same; OPN2; NothingToDo ;};
    {rank=same; WEP3; HasClient_WEP ;};
    {rank=same; WPA4; IsPSK ;};
    */
}
